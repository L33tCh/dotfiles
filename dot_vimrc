syntax enable
set nocompatible
filetype off

"colorscheme atom-dark-256

"--------File ignores----"
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = 'node_modules\DS_Store\|git'
let NERDTreeHijackNetrw = 0

"--------Vundle----------"
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'vim-airline/vim-airline'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-syntastic/syntastic'
Plugin 'Quramy/tsuquyomi'
Plugin 'leafgarland/typescript-vim'
Plugin 'wakatime/vim-wakatime'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-vinegar'
Plugin 'fatih/vim-go'

" dotnet dev
Plugin 'OmniSharp/omnisharp-vim'
"Plugin 'ycm-core/YouCompleteMe'
"Plugin 'zxqfl/tabnine-vim'
Plugin 'tabnine/YouCompleteMe'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


"set backspace=indent,eol,start
let mapleader = ','				"default leader is \ but using ,
set number relativenumber					"activate line numbers
"set linespace=15				"macvim specific line spacing


"--------Visuals---------"
set t_CO=256					"force <t_CO>bit colour


"--------Searching----------"
set hlsearch
set incsearch


"--------Splits-------------"
set splitbelow
set splitright

nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-H> <C-W><C-H>
nmap <C-L> <C-W><C-L>

"--------Dev----------------"
filetype plugin indent on
" convert existing tabs to 2 spaces width
set tabstop=2
" when indenting with '>' use 2 spaces
set shiftwidth=2
" On pressing tab, insert 2 spaces
set expandtab
" dotnet dev - tab completion
" :OmniSharpInstall
" :OmniSharpStartServer
inoremap <expr> <Tab> pumvisible() ? '<C-n>' :                                                                                                                    
\ getline('.')[col('.')-2] =~# '[[:alnum:].-_#$]' ? '<C-x><C-o>' : '<Tab>'
nnoremap <C-o><C-u> :OmniSharpFindUsages<CR>
nnoremap <C-o><C-d> :OmniSharpGotoDefinition<CR>
nnoremap <C-o><C-d><C-p> :OmniSharpPreviewDefinition<CR>
nnoremap <C-o><C-r> :!dotnet run


"--------Mappings-----------"

"make it easy to edit vimrc file.
"edit vim config
nmap <Leader>ev :tabedit $MYVIMRC<cr>
"edit zshell config
nmap <Leader>ez :tabedit ~/.zshrc<cr>
"turn off search highlights
nmap <Leader><space> :nohlsearch<cr>

"NERDTree toggler
"nmap <Leader>nt :NERDTreeToggle<cr>
nmap <Leader>1 :NERDTreeToggle<cr>
nmap <Leader>f :tag<space>

"Tab resizing
nmap <Leader>= <C-W>=
nmap <Leader>- <C-W>-
nmap <Leader>[ <C-W><
nmap <Leader>] <C-W>>

"CtrlP
nmap <Leader>sf :CtrlP<cr>
nmap <Leader>sv :CtrlPBufTag<cr>
nmap <Leader>sr :CtrlPMRUFiles<cr>

"--------Auto-Commands------"
"auto source file after saving
augroup autosourcing
	autocmd!
	autocmd BufWritePost .vimrc source %
augroup END

" Notes and Tips
" - press zz to center current line
" - ctrl ] to go to definition
" - ctrl 6 to go back

